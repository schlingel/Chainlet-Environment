package at.chainlet.rse.plugin;

import java.io.File;
import java.io.IOException;
import java.util.jar.*;
import java.net.JarURLConnection;

/**
 * <p>This class handles the instancing and loading of RSE plugin jars.</p>
 * <ol>
 * <li>It parses the given jar file for the mapping.xml file. If the file is wrong formatted or inconsistent it throws and exception in the sensitive mode or just ignores inconsistences in the mindless mode.</li>
 * <li>It creates a hash map with the dictionary names as key and the list of words as value.</li>
 * </ol>
 */
public class PluginManager {
	/**
	 * Reads the jar file and returns the mapping.xml file as model object. If the file 
	 * does not exist in the jar or an other IO error occours the method throws an io exception.
	 * @param file
	 * @return The mapping object of the mapping.xml
	 * @throws IOException
	 */
	private Mapping getMappingFrom(File file) throws IOException {
		if(file == null)
			throw new IllegalArgumentException("The input jar file must not be null!");
		
		JarFile jFile = new JarFile(file);
		
		return null;
	}
	
	private boolean containsMappingFile(JarFile )
}
