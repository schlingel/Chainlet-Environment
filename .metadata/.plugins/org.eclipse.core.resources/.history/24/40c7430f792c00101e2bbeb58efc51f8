/**
 * 
 */
package at.chainlet.rse.core.utils;

import java.util.ArrayList;

/**
 * <p>Little Util class for splitting Strings with given delimiters without deleting groups
 * of the delimiter chars.</p>
 * <p>This class is used in the parsing process @see at.chainlet.rse.core.RudimentaryStackVM and has therefore some special characteristics.</p>
 * <p>For example:</p>
 * <pre>
 *   "HELLO  WORLD     YOU'RE     PRETTY AWESOME!"
 *    ----- ------ --- ------ --- ------ --------
 * </pre>
 * <p>As you see this input string returns 7 strings in the return value array which differ from
 * the strings String.split would return. This behavior is important for working with input strings
 * in the vm</p>
 * <p>This string is splitted with the SPACE-char as delimiter. It has 3 cases which are showen in 
 * this example:</p>
 * <ul>
 * <li>Normal case: There's onle one delimiter chars between two terms. (e.g. PRETTY AWESOME!)</li>
 * <li>Special case 1: There are two delimiter chars between two terms. So the last delimiter char is added to the second term. (e.g. HELLO _WORLD)</li>
 * <li>Special case 2: There are more than two delimiters between two terms. So the delimiter sequence is taken as term itself. But, the first and the last character of this sequence is removed. This chars are the delimiters after all. (e.g. WORLD ___ YOU'RE)</li>
 * </ul>
 * <p>
 * This simple string splitter is in nature a automat.
 * </p>
 */
public class StringSplitter {
	/**
	 * Contains the delimiter char.
	 */
	private char delimiter;
	
	/**
	 * Contains the input which gets parsed next.
	 */
	private String inputForParsing;
	
	/**
	 * Contains the allready extracted values from the inputForParsing string.
	 */
	private ArrayList<String> currentSplittedValues;
	
	/**
	 * Initializes the StringSplitter with the given char as delimiter char.
	 * @param delim
	 */
	public StringSplitter(char delim) {
		delimiter = delim;
		currentSplittedValues = new ArrayList<String>();
		inputForParsing = "";
	}
	
	/**
	 * Initializes the StringSplitter with space as delimiter char.
	 */
	public StringSplitter() { this(' '); }
	
	/**
	 * Gets the current set delimiter cahr.
	 */
	public char getDelimiter() { return delimiter; }
	
	public String[] split(String input) {
		return null;
	}
}
